/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.32
 * Generated at: 2020-05-13 10:13:51 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.pages;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.constant.ServerConstants;
import java.util.Set;
import java.util.HashMap;
import com.database.ConnectionManager;
import com.helper.JobModel;
import com.helper.UserModel;
import com.helper.StudentModel;
import java.util.List;

public final class jobApplied_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("com.helper.UserModel");
    _jspx_imports_classes.add("java.util.Set");
    _jspx_imports_classes.add("java.util.HashMap");
    _jspx_imports_classes.add("com.database.ConnectionManager");
    _jspx_imports_classes.add("com.helper.JobModel");
    _jspx_imports_classes.add("com.helper.StudentModel");
    _jspx_imports_classes.add("com.constant.ServerConstants");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=utf-8 />\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=ISO-8859-1\">\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../tiles/inc.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t");

		String jid = request.getParameter("jobid");
		UserModel um = (UserModel) session.getAttribute("USER_MODEL");
		String userId = um.getUid();
		//	List applicantList = ConnectionManager.getAppliedCandidates(jid);
	
      out.write("\r\n");
      out.write("\t<div class=\"wrapper\">\r\n");
      out.write("\r\n");
      out.write("\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../tiles/header.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../tiles/menu.jsp", out, false);
      out.write("\r\n");
      out.write("\t\t<div class=\"main-panel\">\r\n");
      out.write("\t\t\t<div class=\"content\">\r\n");
      out.write("\t\t\t\t<div class=\"container-fluid\">\r\n");
      out.write("\t\t\t\t\t<h4 class=\"page-title\">List Of Candidate</h4>\r\n");
      out.write("\t\t\t\t\t<div class=\"row\"></div>\r\n");
      out.write("\t\t\t\t\t");

						List list1 = ConnectionManager.getAppliedCandidates(jid);
						List list = (List) list1.get(0);
						HashMap listMap = (HashMap) list1.get(1);
						int i = 0;
						if (listMap.size() > 0) {
					
      out.write("\r\n");
      out.write("\t\t\t\t\t<div class=\"row row-card-no-pd\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<div class=\"col-md-12\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"card card-tasks\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"card-body \">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"card-sub \"> <h5 class=\"text-success\">Recommended Candidates By our System</h5>  </div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<table class=\"table table-striped table-striped-bg- mt-4\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<thead>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Sr. No.</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Name</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Contact</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Experience</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Score</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Skills</th>\r\n");
      out.write("<th scope=\"col\">Action</th>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<!-- \t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Action</th> -->\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</thead>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<tbody>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t");

												Set<String> entry  = listMap.keySet();
											int j = 0;
												for (String s:entry) {
														um = ConnectionManager.getUserDetails(s);
														String uid = um.getUid();
														StudentModel sm = ConnectionManager.getSkiils(uid);
														StudentModel sd = ConnectionManager.getStudentDetailsFromUid(uid);
											
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<tr ");
      out.print(j + 1);
      out.write(">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<td>");
      out.print(j + 1);
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<td>");
      out.print(um.getFname());
      out.write(' ');
      out.print(um.getLname());
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<td>");
      out.print(um.getPhone());
      out.write("<br>");
      out.print(um.getEmail());
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<td>");
      out.print(ServerConstants.Experience_Criteria[Integer.parseInt(sd.getExperience())] );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<button type=\"button\" onclick=\"showPieInModal('");
      out.print(um.getUid());
      out.write("')\"  class=\"btn btn-default\" >\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t <img data-toggle=\"tooltip\" title=\"");
      out.print(sm.getScore() );
      out.write("\" class=\"rounded-circle mx-auto d-block\" \r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t height=\"150\" width=\"180\" \r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t src=\"");
      out.print(request.getContextPath());
      out.write("/tiles/ajax.jsp?methodId=showImage&pid=");
      out.print(um.getUid());
      out.write("\" \r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t alt=\"Pi Chart image\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t </td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<td>");
      out.print(sm.getSkills());
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<a href=\"");
      out.print(request.getContextPath());
      out.write("/tiles/ajax.jsp?methodId=viewFile&uid=");
      out.print(uid);
      out.write("\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t  target=\"_blank\"><button class=\"btn btn-default\"> View Resume</button></a><br>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t  <button class=\"btn btn-default\" onclick=\"sendEmail('");
      out.print(uid);
      out.write("')\"> \r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<i class=\"la la-envelope-o\"></i> Send  Email</button>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t");

												j++;}
											
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</tbody>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<button class=\"btn btn-light float-right\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<a\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\thref=\"");
      out.print(request.getContextPath());
      out.write("/pages/viewJobApplied.jsp\">Back</a>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</button>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t");

						} else {
					
      out.write("\r\n");
      out.write("\t\t\t\t\t<div class=\"text-center\">\r\n");
      out.write("\t\t\t\t\t\t<label>No Application Found that are Best suited your Requirement</label>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t");

						}
					
      out.write("\r\n");
      out.write("\t\t\t\t\t<div class=\"row row-card-no-pd\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<div class=\"col-md-12\">\r\n");
      out.write("\t\t\t\t\t\t\t<div class=\"card card-tasks\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t<div class=\"card-body \">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<div class=\"card-sub \"> <h5> List of All Candidates</h5>  </div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<table class=\"table table-striped table-striped-bg- mt-4\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<thead>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Sr. No.</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Name</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Contact</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Experience</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Score</th>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Skills</th>\r\n");
      out.write("<th scope=\"col\">Action</th>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<!-- \t\t\t\t\t\t\t\t\t\t\t\t<th scope=\"col\">Action</th> -->\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</thead>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<tbody>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t");

												if (list.size() > 0) {
													for (i = 0; i < list.size(); i++) {
														um = (UserModel) list.get(i);
														String uid = um.getUid();
														StudentModel sm = ConnectionManager.getSkiils(uid);
														StudentModel sd = ConnectionManager.getStudentDetailsFromUid(uid);
											
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<tr ");
      out.print(i + 1);
      out.write(">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<td>");
      out.print(i + 1);
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<td>");
      out.print(um.getFname());
      out.write(' ');
      out.print(um.getLname());
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<td>");
      out.print(um.getPhone());
      out.write("<br>");
      out.print(um.getEmail());
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<td>");
      out.print(ServerConstants.Experience_Criteria[Integer.parseInt(sd.getExperience())] );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<button type=\"button\" onclick=\"showPieInModal('");
      out.print(um.getUid());
      out.write("')\" class=\"btn btn-default\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t <img data-toggle=\"tooltip\" title=\"");
      out.print(sm.getScore() );
      out.write("\" class=\"rounded-circle mx-auto d-block\" height=\"150\" width=\"180\" \r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t src=\"");
      out.print(request.getContextPath());
      out.write("/tiles/ajax.jsp?methodId=showImage&pid=");
      out.print(um.getUid());
      out.write("\" alt=\"Pi Chart image\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t</button>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t </td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<td>");
      out.print(sm.getSkills());
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<a href=\"");
      out.print(request.getContextPath());
      out.write("/tiles/ajax.jsp?methodId=viewFile&uid=");
      out.print(uid);
      out.write("\"\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t  target=\"_blank\"><button class=\"btn btn-default\"> View Resume</button></a><br>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t  <button class=\"btn btn-default\" onclick=\"sendEmail('");
      out.print(uid);
      out.write("')\"> \r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<i class=\"la la-envelope-o\"></i> Send  Email</button>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t</tr>\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t");

												}
												} else {
											
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<div class=\"text-center\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<h2>No Application Found</h2>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t");

												}
											
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</tbody>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t<button class=\"btn btn-light float-right\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<a\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\thref=\"");
      out.print(request.getContextPath());
      out.write("/pages/viewJobApplied.jsp\">Back</a>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</button>\r\n");
      out.write("\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../tiles/footer.jsp", out, false);
      out.write("\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("<div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n");
      out.write("  <div class=\"modal-dialog\" role=\"document\">\r\n");
      out.write("    <div class=\"\">\r\n");
      out.write("      \r\n");
      out.write("      <div class=\"modal-body\">\r\n");
      out.write("     <img data-toggle=\"tooltip\" id=\"modalImg\" src=\"../img.png\" title=\"Pi chart For candidate Assesment \" height=\"580px\" width=\"720px\" alt=\"Pi Chart image\">\r\n");
      out.write("      </div> \r\n");
      out.write("     \r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("</div>\r\n");
      out.write("\t<!-- Modal -->\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("function sendEmail(id){\r\n");
      out.write("\t$.post(\"");
      out.print(request.getContextPath());
      out.write("/tiles/ajax.jsp?methodId=sendEmail\",\r\n");
      out.write("\t\t\t\"uid=\"+id, function(data) {\r\n");
      out.write("\t\t\t\tdata = $.trim(data);\r\n");
      out.write("\t\t\t\tif (data==1) {\r\n");
      out.write("\t\t\t\t\talert('Email Has Been Sended ...!');\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\talert(\"Error\");\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t$('#myform')[0].reset();\r\n");
      out.write("\t\t\t});\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function showPieInModal(uid){\r\n");
      out.write("\t$(\"#modalImg\").attr(\"src\",\"");
      out.print(request.getContextPath());
      out.write("/tiles/ajax.jsp?methodId=showImage&pid=\"+uid);\r\n");
      out.write("\t$(\"#exampleModal\").modal(\"show\");\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../tiles/footerinc.jsp", out, false);
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
